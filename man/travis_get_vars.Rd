% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/travis-vars.R
\name{travis_get_vars}
\alias{travis_get_vars}
\alias{travis_get_var_id}
\alias{travis_set_var}
\alias{travis_delete_var}
\title{Travis CI variables}
\usage{
travis_get_vars(repo = github_repo())

travis_get_var_id(name, repo = github_repo())

travis_set_var(name, value, public = FALSE, repo = github_repo())

travis_delete_var(name, repo = github_repo(),
  id = travis_get_var_id(name, repo = repo))
}
\arguments{
\item{repo}{\code{[string]}\cr
The repository slug to use. Must follow the structure of ´<user>/<repo>´.}

\item{name}{\code{[string]}\cr
The name of the variable.}

\item{value}{\code{[string]}\cr
The value for the new or updated variable.}

\item{public}{\code{[flag]}\cr
Should the variable be public or private?}

\item{id}{\code{[string]}\cr
The ID of the variable, by default obtained from \code{travis_get_var_id()}.}
}
\description{
Functions around public and private variables available in Travis CI builds.

\code{travis_get_vars()} calls the "/settings/env_vars" API.

\code{travis_get_var_id()} retrieves the ID for a variable name, or \code{NULL}.
If multiple variables exist by that name, it returns the ID of the last
(with a warning),
because this is what seems to be used in Travis CI builds in such a case.

\code{travis_set_var()} creates or updates a variable.
If multiple variables exist by that name, it updates the last (with a warning),
because this is what seems to be used in Travis CI builds in such a case.

\code{travis_delete_var()} deletes a variable.
}
\details{
Avoid using \code{travis_set_var()} with literal values, because they will be
recorded in the \code{.Rhistory} file.
}
\examples{
\dontrun{
# List all variables:
travis_get_vars()
}
\dontrun{
# Get the ID of a variable.
travis_get_var_id("secret_var")
}
\dontrun{
# Avoid calling with literal values:
travis_set_var("secret_var", "oh no - this will be recorded in .Rhistory!")

# Set a Travis environment variable without recording it in history
# by reading the value from the console:
travis_set_var("secret_var", readLines(n = 1))
}
\dontrun{
# Delete a variable:
travis_delete_var("secret_var")
}
}
